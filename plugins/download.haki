/** @format */

const { nikka, extractUrls } = require('../lib');
const axios = require('axios');
const yts = require('yt-search');
const dl = require("../lib/utilities/dl")

nikka(
	{
		pattern: 'song',
		desc: 'download yt music',
		public: false,
		category: 'download',
		react: true,
	},
	async (m, { match }) => {
		const q = match; 
		if (!match)
			return m.reply(`hey ${m.pushName}, provide a youtube url to download`);
		const url = await dl(q, "mp3")
		await m.client.sendMessage(m.jid, {
			audio: { url: url },
			mimetype: 'audio/mp4',
			quoted: m.raw
		});
		
		
	}
);

nikka(
	{
		pattern: 'video',
		desc: 'download yt vid',
		public: false,
		category: 'download',
		react: true,
	},
	async (m, { match }) => {
		const q = match; 
		if (!match)
			return m.reply(`hey ${m.pushName}, provide a youtube url to download`);
		const url = await dl(q, "720")
		await m.client.sendMessage(m.jid, {
			audio: { url: url },
			mimetype: 'video/mp4',
			quoted: m.raw
		});
		
	}
);

nikka(
  {
    pattern: "apkdl",
    desc: "APK search & download",
    react: "true",
    category: "download",
    public: false,
  },
  async (m, { match }) => {
    if (!match) return m.reply("Query required.");

    const query = match.trim();
    const response = await axios.get(`https://bk9.fun/search/apkfab?q=${query}`);
    const app = response.data?.BK9?.[0];

    if (!app) return m.reply("No result found.");

    const info = {
      title: app.title,
      link: app.link,
      image: app.image,
      rating: app.rating,
      review: app.review,
    };

    const caption = `TITLE: ${info.title}\n\nLINK: ${info.link}\n\nRATING: ${info.rating}\n\nREVIEW: ${info.review}`;

    await m.client.sendMessage(
      m.jid,
      {
        image: { url: info.image },
        caption,
      },
      { quoted: m.raw }
    );

    const downloadRes = await axios.get(`https://bk9.fun/download/apkfab?url=${info.link}`);
    const apk = downloadRes.data?.BK9?.link;

    if (!apk) return m.reply("Failed to fetch APK download link.");

    await m.client.sendMessage(
      m.jid,
      {
        document: { url: apk },
        fileName: `${info.title}.apk`,
        mimetype: "application/vnd.android.package-archive",
      },
      { quoted: m.raw }
    );
  }
);
