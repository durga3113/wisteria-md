const { nikka } = require("../lib");
const axios = require("axios");
nikka(
    {
        pattern: "apkfab",
        desc: "apk search",
        react: "true",
        category: "search",
        public: false,
        
    },
    async(m, {match}) => {
    if(!match) return m.reply("query needed")
    var query = match.trim()
    var response = await axios.get(`https://bk9.fun/search/apkfab?q=${query}`)
    res = response.data.BK9[0]
    var data = {
        title: res.title,
        link: res.link,
        img: res.image,
        rating: res.rating,
        review: res.review
    }
    var text = `TITLE: ${data.title}\n\n LINK: ${data.link}\n\n RATING: ${data.rating}\n\n REVIEW: ${data.review}`
    return await m.client.sendMessage(m.jid, {image: {url: data.img}, caption: text})
    
    }

)
nikka(
    {
        pattern: "pixabay",
        desc: "pixabay search",
        react: "true",
        category: "search",
        public: false,
        
    },
    async(m, {match}) => {
    if(!match) return m.reply("query needed")
    if(match.includes(",")) {
       var q1 = match.split(",")[0]
       var q2 = parseInt(match.split(",")[1].trim(), 10)
       const response = await axios.get(`https://bk9.fun/search/pixabay?q=${q1}`)
       var urls = response.data.BK9
       for (let i = 0; i < q2; i++){
        await m.client.sendMessage(m.jid, {image: {url: urls[i] }})
       }
    }else{
        const q = match.trim()
        const response = await axios.get(`https://bk9.fun/search/pixabay?q=${q}`)
       var urls = response.data.BK9
       for (let i = 0; i < 5;  i++){
        await m.client.sendMessage(m.jid, {image: {url: urls[i] }})
       }
    }
    
    }

)
